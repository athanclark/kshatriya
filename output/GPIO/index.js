// Generated by purs version 0.11.5
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Uncurried = require("../Control.Monad.Eff.Uncurried");
var Prelude = require("../Prelude");
var GPIO4 = (function () {
    function GPIO4() {

    };
    GPIO4.value = new GPIO4();
    return GPIO4;
})();
var GPIO5 = (function () {
    function GPIO5() {

    };
    GPIO5.value = new GPIO5();
    return GPIO5;
})();
var GPIO6 = (function () {
    function GPIO6() {

    };
    GPIO6.value = new GPIO6();
    return GPIO6;
})();
var GPIO12 = (function () {
    function GPIO12() {

    };
    GPIO12.value = new GPIO12();
    return GPIO12;
})();
var GPIO13 = (function () {
    function GPIO13() {

    };
    GPIO13.value = new GPIO13();
    return GPIO13;
})();
var GPIO16 = (function () {
    function GPIO16() {

    };
    GPIO16.value = new GPIO16();
    return GPIO16;
})();
var GPIO17 = (function () {
    function GPIO17() {

    };
    GPIO17.value = new GPIO17();
    return GPIO17;
})();
var GPIO18 = (function () {
    function GPIO18() {

    };
    GPIO18.value = new GPIO18();
    return GPIO18;
})();
var GPIO19 = (function () {
    function GPIO19() {

    };
    GPIO19.value = new GPIO19();
    return GPIO19;
})();
var GPIO20 = (function () {
    function GPIO20() {

    };
    GPIO20.value = new GPIO20();
    return GPIO20;
})();
var GPIO21 = (function () {
    function GPIO21() {

    };
    GPIO21.value = new GPIO21();
    return GPIO21;
})();
var GPIO22 = (function () {
    function GPIO22() {

    };
    GPIO22.value = new GPIO22();
    return GPIO22;
})();
var GPIO23 = (function () {
    function GPIO23() {

    };
    GPIO23.value = new GPIO23();
    return GPIO23;
})();
var GPIO24 = (function () {
    function GPIO24() {

    };
    GPIO24.value = new GPIO24();
    return GPIO24;
})();
var GPIO25 = (function () {
    function GPIO25() {

    };
    GPIO25.value = new GPIO25();
    return GPIO25;
})();
var GPIO26 = (function () {
    function GPIO26() {

    };
    GPIO26.value = new GPIO26();
    return GPIO26;
})();
var GPIO27 = (function () {
    function GPIO27() {

    };
    GPIO27.value = new GPIO27();
    return GPIO27;
})();
var toPin = function (v) {
    if (v instanceof GPIO4) {
        return 7;
    };
    if (v instanceof GPIO5) {
        return 29;
    };
    if (v instanceof GPIO6) {
        return 31;
    };
    if (v instanceof GPIO12) {
        return 32;
    };
    if (v instanceof GPIO13) {
        return 33;
    };
    if (v instanceof GPIO16) {
        return 36;
    };
    if (v instanceof GPIO17) {
        return 11;
    };
    if (v instanceof GPIO18) {
        return 12;
    };
    if (v instanceof GPIO19) {
        return 35;
    };
    if (v instanceof GPIO20) {
        return 38;
    };
    if (v instanceof GPIO21) {
        return 40;
    };
    if (v instanceof GPIO22) {
        return 15;
    };
    if (v instanceof GPIO23) {
        return 16;
    };
    if (v instanceof GPIO24) {
        return 18;
    };
    if (v instanceof GPIO25) {
        return 22;
    };
    if (v instanceof GPIO26) {
        return 37;
    };
    if (v instanceof GPIO27) {
        return 13;
    };
    throw new Error("Failed pattern match at GPIO line 34, column 9 - line 54, column 1: " + [ v.constructor.name ]);
};
module.exports = {
    GPIO4: GPIO4, 
    GPIO5: GPIO5, 
    GPIO6: GPIO6, 
    GPIO12: GPIO12, 
    GPIO13: GPIO13, 
    GPIO16: GPIO16, 
    GPIO17: GPIO17, 
    GPIO18: GPIO18, 
    GPIO19: GPIO19, 
    GPIO20: GPIO20, 
    GPIO21: GPIO21, 
    GPIO22: GPIO22, 
    GPIO23: GPIO23, 
    GPIO24: GPIO24, 
    GPIO25: GPIO25, 
    GPIO26: GPIO26, 
    GPIO27: GPIO27, 
    toPin: toPin, 
    listenImpl: $foreign.listenImpl, 
    openReadImpl: $foreign.openReadImpl, 
    openWriteImpl: $foreign.openWriteImpl, 
    readPinImpl: $foreign.readPinImpl, 
    writePinImpl: $foreign.writePinImpl
};
